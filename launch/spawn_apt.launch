<?xml version="1.0" encoding="UTF-8"?>
<launch>
  
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="world" default="$(find urdf_sim)/world/floor6_world.world" />

  <!-- Open gazebo's empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Spawn apt_prototype -->
  <include file="$(find urdf_sim)/launch/urdf_spawn.launch">
    <arg name="x" value="0.0" />
    <arg name="y" value="0.0" />
    <arg name="z" value="0.5" />
    <arg name="urdf_file" value="$(find urdf_sim)/urdf/apt_prototype.urdf" />
    <arg name="robot_name" value="apt_prototype" />
  </include>

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  </node>

  <!-- Robot State -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Run "set_pose" node to set pose from odom to gazebo -->
  <!--node name="set_pose" pkg="urdf_sim" type="set_pose.py"/-->

  <!-- Set home and EKF position -->
  <!--node name="rover_init" pkg="auto_pinto_2" type="rover_init.py"/-->

  <!-- Scan filters -->
  <node pkg="laser_filters" type="scan_to_scan_filter_chain" output="screen" name="laser_filter">
    <rosparam command="load" file="$(find auto_pinto_2)/config/filter_chain.yaml" />
    <remap from="/scan_filtered" to="/scan" />
  </node>

  <!-- Map server -->
  <!--arg name="map_file" default="$(find auto_pinto_2)/map_files/floor66.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" >
    <param name="frame_id" value="map"/>
  </node-->

  <!-- Static TF -->
  <!--node name="static_tf_node" pkg="auto_pinto_2" type="static_tf_node.py" output="screen" /-->

</launch>
